/*
   Copyright 2016 James Craig

   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
@import (reference) 'styles.less';

@media (prefers-color-scheme: light) {
    
    body {
        color: @lightTextColor;
        background-color: @lightBackgroundColor;
    }
    
    hr {
        background-color: @lightBorderColor;
    }

    abbr[data-original-title], abbr[title] {
        .border-bottom(@style:dotted,@color: @lightBorderColor);
    }

    blockquote {
        .border-left(.313em,@color: @lightBorderColor);

        &.reverse {
            .border-right(.313em,@color: @lightBorderColor);
        }

        & .small,
        & footer, 
        & small {
            color: @lightBorderColor;
        }
    }

    code {
        color: @lightPrimaryShadowColor;
        background-color: @lightBackgroundHighlightColor;
        border-radius: @roundedCorner;
    }
    
    kbd {
        color: @lightBackgroundColor;
        background-color: @lightTextColor;
        border-radius: @roundedCorner;
    }

    
    pre {
        color: @lightPrimaryShadowColor;
        background-color: @lightBackgroundHighlightColor;
        .roundedBorder(@color:@lightBorderColor);
    }

    mark {
        background-color: @lightSecondaryCallToActionColor;
        color: @lightBackgroundColor;
    }

    meter {
        &::-webkit-meter-optimum-value {
            background-color: @lightPrimaryBackground;
            .roundedBorder(@color:@lightPrimaryBorder);
        }

        &::-moz-meter-bar {
            background-color: @lightBackgroundHighlightColor;
            .roundedBorder(@color:@lightBorderColor);
        }
    }

    progress {
        background-color: @lightBackgroundHighlightColor;

        &[value]::-webkit-progress-value {
            background-color: @lightPrimaryBackground;
            .roundedBorder(@color:@lightPrimaryBorder);
        }

        &[value]::-webkit-progress-bar,
        &:not([value])::-webkit-progress-bar {
            background-color: @lightBackgroundHighlightColor;
            .roundedBorder(@color:@lightBorderColor);
        }
    }

    img {
        &.thumbnail {
            .roundedBorder(@color:@lightBorderColor);
        }
    }

    figure {
        background-color: @lightBackgroundColor;
        .roundedBorder(@color:@lightBorderColor);
    }

    a {
        color: @lightCallToActionColor;
    }

    .roundedBorder {
        .roundedBorder(@color:@lightBorderColor);
    }

    .bordered {
        .border(@color:@lightBorderColor);
    }

    .border-right {
        .border-right(@color:@lightBorderColor);
    }

    .border-left {
        .border-left(@color:@lightBorderColor);
    }

    .border-bottom {
        .border-bottom(@color:@lightBorderColor);
    }

    .border-top {
        .border-top(@color:@lightBorderColor);
    }

    .spinner {
        .roundedBorder(.125em, @color:@lightBorderColor,@radius:@circularCorners);
    }
    
    table {
        & tbody tr td, 
        & tfoot tr td {
            .border-top(@color: @lightBorderColor);
        }

        & tbody tr:first-child, 
        & tfoot tr:first-child {
            .border-top(2px,@color:@lightBorderColor);
        }
            
        &.bordered {
            & thead tr th,
            & tbody tr td, 
            & tfoot tr td {
                .border(@color: @lightBorderColor);
            }
        }
    
        &.horizontal {
            & tfoot tr td,
            & thead tr th {
                background-color: @lightBackgroundShadowColor;
            }
        }

        &.horizontal tbody tr:nth-child(even), 
        &.vertical thead tr th:nth-child(even), 
        &.vertical tbody tr td:nth-child(even), 
        &.vertical tbody tr td:nth-child(even), 
        &.horizontal tfoot tr:nth-child(even), 
        &.vertical tfoot tr td:nth-child(even), 
        &.vertical tfoot tr td:nth-child(even) {
            background-color: @lightBackgroundHighlightColor;
        }
    
        &.vertical thead tr th,
        &.vertical tbody tr td, 
        &.vertical tfoot tr td {
            .border-left(@color: @lightBorderColor);
            .border-right(@color: @lightBorderColor);
        }
    
        &.vertical.bordered thead tr th:first-child, 
        &.vertical.bordered tbody tr td:first-child, 
        &.vertical.bordered tfoot tr td:first-child {
            .border-left(@color: @lightBorderColor);
        }
    
        &.vertical.bordered thead tr th:last-child, 
        &.vertical.bordered tbody tr td:last-child, 
        &.vertical.bordered tfoot tr td:last-child {
            .border-right(@color: @lightBorderColor);
        }
    
        &.horizontal.hover tbody tr:hover, 
        &.horizontal.hover tbody tr:hover a, 
        &.hover tbody tr:hover, 
        &.hover tbody tr:hover a {
            background-color: @lightActiveColor;
            color: @lightActiveBackground;
        }
    
        & caption {
            color: @lightBorderColor;
        }
    }

    ul.chevron > li,
    ul.dotted > li {
        & > a {
            .border(@color: @lightBorderColor);
        }
    }

    ul.paged {
        & > li {
            & > a:focus,
            & > a:hover {
                background-color: @lightBackgroundHighlightColor;
            }
                
            &.disabled {
                &,
                & > a,
                & > a:focus,
                & > a:hover {
                    color: @lightBorderColor;
                    background-color: @lightBackgroundColor;
                }
            }
                
            &.active{
                &,
                & > a,
                & > a:focus,
                & > a:hover {
                    color: @lightActiveColor;
                    background-color: @lightActiveBackground;
                    border-color: @lightActiveBorder;
                }
            }
        }
    }

    ul.chevron > li {
        &:first-child > a,
        &:last-child > a {
            background: @lightBorderColor;
            color: @lightBackgroundColor;
        }
    }

    ul.dotted > li {
        & > a {
            background: @lightBorderColor;
            color: @lightBorderColor;
        }

        & > a:hover,
        & > a:focus {
            background: @lightBorderColor;
            color: @lightBorderColor;
        }
    }

    .tabs
    {
        &>header
        {
            background-color: @lightBorderColor;
            
            &>ul>li>a
            {
                background-color: @lightBackgroundShadowColor;
                color: @lightTextShadowColor;
                .border-left(@color: @lightBorderColor);
                
                &:hover,&.selected {
                    background-color: @lightBackgroundColor;
                    color: @lightTextColor;
                }
            }
        }
        
        &.vertical>header>ul>li>a
        {
            .border-top(@color: @lightBorderColor);
        }
    }

    .menu,nav {
        & > ul > li > ul {
            .roundedBorder(@color: @lightBorderColor);
        }
        
        & .separator {
            background-color: @lightBorderColor;
        }
        
        & > ul > li > ul > li,
        & > ul > li.active > ul > li > a {
            background-color: @lightBackgroundColor;
        }
            
        & a:hover,
        & a:focus,
        & ul li.item:hover,
        &.horizontal ul li.item:hover,
        & > ul > li > ul > li>a:hover {
            background-color: @lightBackgroundHighlightColor;
        }
        
        & .disabled a {
            color: @lightTextShadowColor;
        }
        
        & .selected a,
        & .selected a:visited,
        & a.selected,
        & a.selected:visited {
            color: @lightActiveColor;
            background-color: @lightActiveBackground;
        }

        &.horizontal, &.pill {
            & > ul > li > ul {
                .border(@color: @lightBorderColor);
            }
        }
        
        &.pill {
            .roundedBorder(@color: @lightBorderColor);
                    
            & .separator {
                background: @lightBorderColor;
            }
            
            & ul li ul li {
                background-color: @lightBackgroundColor;
            }

            & ul li.success {
                & a:hover {
                    background-color: @successColor;
                    color: @successBackground;
                }
                & > ul > li > a {
                    background-color: @successBackground;
                    color: @successColor;
                }
            }

            & ul li.info {
                & a:hover {
                    background-color: @infoColor;
                    color: @infoBackground;
                }
                & > ul > li > a {
                    background-color: @infoBackground;
                    color: @infoColor;
                }
            }

            & ul li.warning {
                & a:hover {
                    background-color: @warningColor;
                    color: @warningBackground;
                }
                & > ul > li > a {
                    background-color: @warningBackground;
                    color: @warningColor;
                }
            }

            & ul li.error {
                & a:hover {
                    background-color: @errorColor;
                    color: @errorBackground;
                }
                & > ul > li > a {
                    background-color: @errorBackground;
                    color: @errorColor;
                }
            }

            & ul li.active {
                & a:hover {
                    background-color: @lightActiveColor;
                    color: @lightActiveBackground;
                }
                & > ul > li > a {
                    background-color: @lightActiveBackground;
                    color: @lightActiveColor;
                }
            }

            & ul li.primary {
                & a:hover {
                    background-color: @lightPrimaryText;
                    color:  @lightPrimaryBackground;
                }
                & > ul > li > a {
                    background-color:  @lightPrimaryBackground;
                    color: @lightPrimaryText;
                }
            }
        }
    }
    .mobile-toggler {
        color: @lightTextColor;
    }
}